<?php
/**
 * @file
 * Functions used to install the analysis: expression module.
 */

/**
 * Implements hook_requirements().
 *
 * @param string $phase
 *
 * @ingroup tripal_analysis_exprtripal_elasticsearch/collectionsession
 */
function tripal_analysis_expression_requirements($phase) {
  $requirements = [];
  if ($phase == 'install') {
    // Make sure chado is installed.
    if (!$GLOBALS["chado_is_installed"]) {
      $requirements['tripal_analysis_expression'] = [
        'title' => "tripal_analysis_expression",
        'value' => "ERROR: Chado must be installed before this module can be enabled",
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }
  return $requirements;
}

/**
 * Implements install_hook().
 *
 * Permforms actions when the module is first installed.
 *
 * @ingroup tripal_analysis_module
 */
function tripal_analysis_expression_install() {
  // data directories for upload and download
  tripal_create_files_dir('tripal_analysis_expression');
  tripal_create_files_dir('tripal_analysis_expression_download');

  // Insert term used for fields
  tripal_insert_cvterm([
    'id' => 'data:2603',
    'name' => 'gene_expression_data',
    'cv_name' => 'EDAM',
    'definition' => 'Visualize expression data',
  ]);

  // These variables are used to set how expression information is displayed.
  // TODO: Many (all? Of these are no longer used, check to remove)
  //  variable_set('chado_feature_expression_hide_expression', 0);
  //  variable_set('chado_feature_expression_hide_biomaterial_labels', 0);
  //  variable_set('chado_feature_expression_limit_label_length', 0);
  //  variable_set('chado_feature_expression_min_num_biomaterials', 0);
  //  variable_set('chado_feature_expression_expression_display', 'column');
  //  variable_set('chado_feature_expression_biomaterial_display_width', 15);

  // These are needed for the search functionality in heatmap
  variable_set('tripal_analysis_expression_heatmap_placeholder', 'Example: orange1.1g022520m, orange1.1g022799m');
  variable_set('tripal_analysis_expression_heatmap_example', 'orange1.1g022520m, orange1.1g022799m, orange1.1g022520m, orange1.1g022799m');
  variable_set('analysis_expression_heatmap_db', 'mview');

  // Install mviews
  tripal_analysis_expression_add_mview_expression_feature_all();
  tripal_analysis_expression_add_mview_expression_feature();

  // Add pvalue cvterms
  tripal_analysis_expression_add_pvalue_cvterm();
  tripal_analysis_expression_add_evidence_code_cvterm();
  tripal_analysis_expression_add_experimental_factor_cvterms();

  tripal_analysis_expression_add_eco_cvterm();
}

/**
 * Implements hook_uninstall().
 *
 * @ingroup tripal_analysis_expression
 */
function tripal_analysis_expression_uninstall() {
  // Delete all mviews that are associated with this module
  $mviews = db_query('SELECT * FROM {tripal_mviews} WHERE modulename = :name', [
    ':name' => 'tripal_analysis_expression',
  ]);

  foreach ($mviews->fetchAll() as $mview) {
    tripal_delete_mview($mview->mview_id);
  }
}

/**
 * Add expression_feature mview.
 */
function tripal_analysis_expression_add_mview_expression_feature() {
  $mv_name = 'expression_feature';
  $comment = 'Store list of unique features that have expression data';
  $schema = [
    'table' => $mv_name,
    'description' => $comment,
    'fields' => [
      'feature_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'organism_id' => [
        'size' => 'big',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'feature_uniquename' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'organism_common_name' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'accession' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ],
    ],
    'indexes' => [
      'feature_id_index' => ['feature_id'],
      'organism_id_index' => ['organism_id'],
      'feature_uniquename_index' => ['feature_uniquename'],
      'organism_common_name_index' => ['organism_common_name'],
      'accession_index' => ['accession'],
    ],
  ];

  $sql = "SELECT DISTINCT(F.feature_id) AS feature_id,
  O.organism_id AS organism_id,
  F.uniquename AS feature_uniquename,
  O.common_name AS organism_common_name,
  (
    SELECT string_agg(DXR.accession, ',') AS accession FROM feature_cvterm FC
      INNER JOIN cvterm CVT ON CVT.cvterm_id = FC.cvterm_id
      INNER JOIN dbxref DXR ON DXR.dbxref_id = CVT.dbxref_id
      WHERE F.feature_id = FC.feature_id
  ) AS accession
  FROM feature F
  INNER JOIN organism O ON F.organism_id = O.organism_id
  INNER JOIN element E ON E.feature_id = F.feature_id
  INNER JOIN elementresult ER ON ER.element_id = E.element_id
  INNER JOIN quantification Q ON Q.quantification_id = ER.quantification_id
  INNER JOIN acquisition AC ON AC.acquisition_id = Q.acquisition_id
  INNER JOIN assay A ON A.assay_id = AC.assay_id
  INNER JOIN assay_biomaterial AB ON AB.assay_id = A.assay_id
  INNER JOIN biomaterial B ON B.biomaterial_id = AB.biomaterial_id";

  chado_add_mview($mv_name, 'tripal_analysis_expression', $schema, $sql, $comment, false);
}

/**
 * Add expression_feature_all mview
 */
function tripal_analysis_expression_add_mview_expression_feature_all() {
  $mv_name = "expression_feature_all";
  $comment = "Stores expression values with analysis and biosample data";
  $schema = [
    'table' => $mv_name,
    'description' => $comment,
    'fields' => [
      'feature_id' => [
        'type' => 'int',
        'not null' => TRUE,
      ],
      'feature_uniquename' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'biomaterial_id' => [
        'type' => 'int',
        'not null' => TRUE,
      ],
      'biomaterial_name' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'analysis_id' => [
        'type' => 'int',
        'not null' => TRUE,
      ],
      'analysis_name' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'signal' => [
        'type' => 'float',
        'size' => 'big',
        'not null' => TRUE,
      ],
    ],
    'indexes' => [
      'feature_id_index' => ['feature_id'],
      'analysis_id_index' => ['analysis_id'],
      'biomaterial_id_index' => ['biomaterial_id'],
      'feature_uniquename_index' => ['feature_uniquename'],
    ],
  ];

  $sql = "SELECT F.feature_id AS feature_id,
                 F.uniquename AS feature_uniquename,
                 B.biomaterial_id AS biomaterial_id,
                 B.name AS biomaterial_name,
                 AN.analysis_id AS analysis_id,
                 AN.name AS analysis_name,
                 ER.signal AS signal
              FROM elementresult ER
              INNER JOIN element E ON E.element_id = ER.element_id
              INNER JOIN feature F ON F.feature_id = E.feature_id
              INNER JOIN quantification Q ON Q.quantification_id = ER.quantification_id
              INNER JOIN acquisition AQ ON AQ.acquisition_id = Q.acquisition_id
              INNER JOIN assay A ON A.assay_id = AQ.assay_id
              INNER JOIN assay_biomaterial AB ON AB.assay_id = A.assay_id
              INNER JOIN biomaterial B ON B.biomaterial_id = AB.biomaterial_id
              INNER JOIN analysis AN ON AN.analysis_id = Q.analysis_id";

  chado_add_mview($mv_name, 'tripal_analysis_expression', $schema, $sql, $comment, false);
}

function tripal_analysis_expression_add_pvalue_cvterm() {
  chado_insert_cvterm([
    'id' => 'OBI:0000175',
    'name' => 'p-value',
    'cv_name' => 'OBI',
    'db_name' => 'OBI',
    'description' => 'A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.'
  ]);
}

function tripal_analysis_expression_add_experimental_factor_cvterms() {
  chado_insert_cvterm([
    'id' => 'GO:0010193',
    'name' => 'response to ozone',
    'definition' => 'Any process that results in a change in state or activity of a cell or an organism (in terms of movement, secretion, enzyme production, gene expression, etc.) as a result of a ozone stimulus. [GOC:sm]',
    'cv_name' => 'GO',
    'db_name' => 'GO',
  ]);

  chado_insert_cvterm([
    'id' => 'GO:0009408',
    'name' => 'response to heat',
    'definition' => 'Any process that results in a change in state or activity of a cell or an organism (in terms of movement, secretion, enzyme production, gene expression, etc.) as a result of a temperature stimulus. [GOC:hb]',
    'cv_name' => 'GO',
    'db_name' => 'GO',
  ]);

  chado_insert_cvterm([
    'id' => 'GO:0009414',
    'name' => 'response to water deprivation',
    'definition' => 'Any process that results in a change in state or activity of a cell or an organism (in terms of movement, secretion, enzyme production, gene expression, etc.) as a result of a water deprivation stimulus, prolonged deprivation of water. [GOC:lr]',
    'cv_name' => 'GO',
    'db_name' => 'GO',
  ]);

  chado_insert_cvterm([
    'id' => 'GO:0009409',
    'name' => 'response to cold',
    'definition' => 'Any process that results in a change in state or activity of a cell or an organism (in terms of movement, secretion, enzyme production, gene expression, etc.) as a result of a cold stimulus, a temperature stimulus below the optimal temperature for that organism. [GOC:lr]',
    'cv_name' => 'GO',
    'db_name' => 'GO',
  ]);

  chado_insert_cvterm([
    'id' => 'GO:0009611',
    'name' => 'response to wounding',
    'definition' => 'Any process that results in a change in state or activity of a cell or an organism (in terms of movement, secretion, enzyme production, gene expression, etc.) as a result of a stimulus indicating damage to the organism. [GOC:go_curators]',
    'cv_name' => 'GO',
    'db_name' => 'GO',
  ]);

  chado_insert_cvterm([
    'id' => 'GO:0009625',
    'name' => 'response to insect',
    'definition' => 'Any process that results in a change in state or activity of a cell or an organism (in terms of movement, secretion, enzyme production, gene expression, etc.) as a result of a stimulus from an insect. [GOC:hb]',
    'cv_name' => 'GO',
    'db_name' => 'GO',
  ]);
}

function tripal_analysis_expression_add_evidence_code_cvterm() {
  chado_insert_cvterm([
    'id' => 'local:evidence_code',
    'name' => 'evidence code',
    'cv_name' => 'local',
  ]);
}

function tripal_analysis_expression_add_eco_cvterm() {
  chado_insert_cvterm([
    'id' => 'ECO:0006068',
    'name' => 'RNA-sequencing evidence used in manual assertion',
    'definition' => 'A type of high throughput nucleotide sequencing assay evidence used in a manual assertion based on high-throughput (HT) sequencing of fragmented cDNA molecules. [ECO:MCC]',
    'cv_name' => 'ECO',
    'db_name' => 'ECO',
  ], ['update_existing' => FALSE]);
}

/**
 * Add heatmap variables.
 */
function tripal_analysis_expression_update_7200() {
  variable_set('tripal_analysis_expression_heatmap_placeholder', 'Example: orange1.1g022520m, orange1.1g022799m');
  variable_set('tripal_analysis_expression_heatmap_example', 'orange1.1g022520m, orange1.1g022799m, orange1.1g022520m, orange1.1g022799m');
}

/**
 * Add expression feature materialized view
 */
function tripal_analysis_expression_update_7201() {
  tripal_analysis_expression_add_mview_expression_feature();
}

/**
 * Set default value for elasticsearch dependency.
 */
function tripal_analysis_expression_update_7202() {
  variable_set('analysis_expression_heatmap_db', 'mview');
}

/**
 * Define materialized view to link expression data with features biosamples
 * and analyses
 */
function tripal_analysis_expression_update_7203() {
  tripal_analysis_expression_add_mview_expression_feature_all();
}

/**
 * If cvalue_id column for cvtermprop doesn't exist, add it
 */
function tripal_analysis_expression_update_7300() {
  $cvalue_exists = db_query('SELECT column_name 
    FROM information_schema.columns 
    WHERE table_name=\'feature_cvtermprop\'
    AND column_name=\'cvalue\'
    ')->fetchAll();

  if (!$cvalue_exists) {
    db_query('ALTER TABLE chado.feature_cvtermprop ADD COLUMN cvalue_id bigint');
  }
}

function tripal_analysis_expression_update_7302() {
  tripal_analysis_expression_add_eco_cvterm();
}

function tripal_analysis_expression_update_7301() {
  tripal_analysis_expression_add_pvalue_cvterm();
  tripal_analysis_expression_add_evidence_code_cvterm();
  tripal_analysis_expression_add_experimental_factor_cvterms();
}
